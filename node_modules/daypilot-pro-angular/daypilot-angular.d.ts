import { AfterViewInit, EventEmitter, OnInit, DoCheck, ElementRef, OnDestroy } from "@angular/core";
import { DayPilot } from "./daypilot-core";
import * as ɵngcc0 from '@angular/core';
export declare class DayPilotSchedulerComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {
    private _requestUpdate;
    private _requestViewChange;
    private _eventDiff;
    private _visibleRange;
    private _hashOptions;
    private _eventsSet;
    private _events;
    private _id;
    control: DayPilot.Scheduler;
    viewChange: EventEmitter<DayPilot.Date>;
    config: any;
    events: DayPilot.EventData[];
    readonly id: string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    private dispose();
    private updateOptions();
    private updateEvents();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayPilotSchedulerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DayPilotSchedulerComponent, "daypilot-scheduler", never, { "events": "events"; "config": "config"; }, { "viewChange": "viewChange"; }, never, never>;
}
export declare class DayPilotCalendarComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {
    private _requestUpdate;
    private _requestViewChange;
    private _hashOptions;
    private _hashEvents;
    private _id;
    control: DayPilot.Calendar;
    viewChange: EventEmitter<DayPilot.Date>;
    events: DayPilot.EventData[];
    config: any;
    readonly id: string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    private dispose();
    private updateOptions();
    private updateEvents();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayPilotCalendarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DayPilotCalendarComponent, "daypilot-calendar", never, { "events": "events"; "config": "config"; }, { "viewChange": "viewChange"; }, never, never>;
}
export declare class DayPilotGanttComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {
    private _requestUpdate;
    private _hashOptions;
    private _id;
    control: DayPilot.Gantt;
    config: any;
    readonly id: string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    private dispose();
    private updateOptions();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayPilotGanttComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DayPilotGanttComponent, "daypilot-gantt", never, { "config": "config"; }, {}, never, never>;
}
export declare class DayPilotMonthComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {
    private _requestUpdate;
    private _hashOptions;
    private _hashEvents;
    private _id;
    control: DayPilot.Month;
    events: DayPilot.EventData[];
    config: any;
    readonly id: string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    private dispose();
    private updateOptions();
    private updateEvents();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayPilotMonthComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DayPilotMonthComponent, "daypilot-month", never, { "events": "events"; "config": "config"; }, {}, never, never>;
}
export declare class DayPilotKanbanComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {
    private _requestUpdate;
    private _hashOptions;
    private _id;
    control: DayPilot.Kanban;
    config: any;
    readonly id: string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    private dispose();
    private updateOptions();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayPilotKanbanComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DayPilotKanbanComponent, "daypilot-kanban", never, { "config": "config"; }, {}, never, never>;
}
export declare class DayPilotNavigatorComponent implements OnInit, OnDestroy, AfterViewInit, DoCheck {
    private _requestUpdate;
    private _hashOptions;
    private _hashDate;
    private _hashEvents;
    private _onTrs;
    date: DayPilot.Date;
    events: DayPilot.EventDataShort[];
    config: any;
    dateChange: EventEmitter<DayPilot.Date>;
    private _id;
    control: DayPilot.Navigator;
    readonly id: string;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    private dispose();
    private updateOptions();
    private updateEvents();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayPilotNavigatorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DayPilotNavigatorComponent, "daypilot-navigator", never, { "date": "date"; "events": "events"; "config": "config"; }, { "dateChange": "dateChange"; }, never, never>;
}
export declare class DayPilotModalComponent implements OnInit {
    private element;
    autoFocus: boolean;
    close: EventEmitter<any>;
    private _visibility;
    constructor(element: ElementRef);
    readonly visible: boolean;
    ngOnInit(): void;
    show(): void;
    hide(result?: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayPilotModalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DayPilotModalComponent, "daypilot-modal", never, { "autoFocus": "autoFocus"; }, { "close": "close"; }, never, ["*"]>;
}
export declare class DayPilotModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DayPilotModule, [typeof DayPilotSchedulerComponent, typeof DayPilotCalendarComponent, typeof DayPilotMonthComponent, typeof DayPilotNavigatorComponent, typeof DayPilotGanttComponent, typeof DayPilotKanbanComponent, typeof DayPilotModalComponent], never, [typeof DayPilotSchedulerComponent, typeof DayPilotCalendarComponent, typeof DayPilotMonthComponent, typeof DayPilotNavigatorComponent, typeof DayPilotGanttComponent, typeof DayPilotKanbanComponent, typeof DayPilotModalComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DayPilotModule>;
}
export { DayPilot };

//# sourceMappingURL=daypilot-angular.d.ts.map